{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "Creates a Jenkins instance on a Windows EC2 instance.",

	"Parameters" : {
		"KeyName" : {
			"Description" : "Name of an existing EC2 KeyPair file (.pem) to use to create EC2 instances.  If the file name is foo.pem, specify foo",
			"Type" : "AWS::EC2::KeyPair::KeyName"
		},
		"EC2InstanceType" : {
			"Description" : "EC2 instance type, reference this parameter to insure consistency",
			"Type"        : "String",
			"Default"     : "t2.micro",
			"AllowedValues" : [
				"t2.small",
				"t2.micro",
				"t2.medium",
				"t2.large",
				"m3.medium",
				"m3.large"
			],
			"ConstraintDescription" : "Must be a valid EC2 instance type"
		},
		"StorageVolumeId" : {
			"Description" : "The identifer of an EC2 volume that will be attached to this instance.",
			"Type"        : "AWS::EC2::Volume::Id",
			"ConstraintDescription" : "Must be a valid EC2 Volume instance id (vol-XXXXX)"
		},		
		"Environment" : {
			"Description" : "The Author-it environment name with which to associate this.",
			"Type" : "String",
			"AllowedValues" : [
				"TestAws",
				"Dev",
				"DevOps"
			],
			"Default" : "DevOps"
		}
	},
	"Mappings" : {
		"RegionMap" : {
			"ap-northeast-1" : {
				"AMI" : "ami-3e93fe3e",
				"RegionAvailabilityZone" : "ap-northeast-1c"
			},
			"ap-southeast-1" : {
				"AMI" : "ami-faedfea8",
				"RegionAvailabilityZone" : "ap-southeast-1b"
			},
			"ap-southeast-2": {
				"AMI" : "ami-7bda9041",
				"RegionAvailabilityZone" : "ap-southeast-2b"
			},
			"eu-central-1" : {
				"AMI" : "ami-f2f5f9ef",
				"RegionAvailabilityZone" : "eu-central-1b"
			},
			"eu-west-1" : {
				"AMI" : "ami-2fcbf458",
				"RegionAvailabilityZone" : "eu-west-1c"
			},
			"sa-east-1" : {
				"AMI" : "ami-02952d6e",
				"RegionAvailabilityZone" : "sa-east-1c"
			},
			"us-east-1" : {
				"AMI" : "ami-1df0ac78",
				"RegionAvailabilityZone" : "us-east-1e"
			},
			"us-west-1" : {
				"AMI" : "ami-91f93ad5",
				"RegionAvailabilityZone" : "us-west-1c"
			},
			"us-west-2" : {
				"AMI" : "ami-f8f715cb",
				"RegionAvailabilityZone" : "us-west-2c"
			}
		}
	},

	"Resources" : {
		"S3AccessRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version" : "2012-10-17",
					"Statement": [ {
					"Effect": "Allow",
					"Principal": {
					"Service": [ "ec2.amazonaws.com" ]
					},
					"Action": [ "sts:AssumeRole" ]
					} ]
				},
				"Path": "/"
			}
		},
		"S3RolePolicies" : {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
			"PolicyName" : "s3access",
			"PolicyDocument" : {
				"Statement" : [ {
					"Effect" : "Allow",
					"Action" : "s3:*",
					"Resource" : "*"
				}]
			},
			"Roles" : [ { "Ref" : "S3AccessRole" } ]
			}
		},
		"S3InstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [ { "Ref" : "S3AccessRole" } ]
			}		
		},		
		"JenkinsWindowsSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Security Group for Jenkins on Windows.",
				"SecurityGroupIngress" : [
					{
						"IpProtocol" : "tcp",
						"FromPort"   : "80",
						"ToPort"     : "80",
						"CidrIp"     : "0.0.0.0/0"
					},
					{
						"IpProtocol" : "tcp",
						"FromPort"   : "443",
						"ToPort"     : "443",
						"CidrIp"     : "0.0.0.0/0"
					},
					{
						"IpProtocol" : "tcp",
						"FromPort"   : "3389",
						"ToPort"     : "3389",
						"CidrIp"     : "0.0.0.0/0"
					},
					{
						"IpProtocol" : "tcp",
						"FromPort"   : "5985",
						"ToPort"     : "5985",
						"CidrIp"     : "0.0.0.0/0"
					},
					{
						"IpProtocol" : "tcp",
						"FromPort"   : "5986",
						"ToPort"     : "5986",
						"CidrIp"     : "0.0.0.0/0"
					},
					{
						"IpProtocol" : "tcp",
						"FromPort"   : "8080",
						"ToPort"     : "8080",
						"CidrIp"     : "0.0.0.0/0"
					}
				]
			}
		},
		
		"EC2Instance" : {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"AvailabilityZone" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RegionAvailabilityZone" ] },
				"KeyName" : { "Ref" : "KeyName" },
				"IamInstanceProfile" : { "Ref" : "S3InstanceProfile" },
				"ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ] },
				"InstanceType" : { "Ref" : "EC2InstanceType" },
				"SecurityGroups" : [ { "Ref" :  "JenkinsWindowsSecurityGroup" } ],
				"UserData" : {  "Fn::Base64" : { "Fn::Join" : [ "", [
								"<powershell>\n",																		
									"Import-Module AWSPowerShell \n",									
									"New-Item -ItemType Directory -Path C:\\Users\\Public\\DevOps\\Deployment -Force | Out-Null \n",									
									"Set-Location -Path C:\\Users\\Public\\DevOps\\Deployment \n",
									"Copy-S3Object -BucketName doerodney -Key downloads/jre/jre-8u65-windows-x64.exe -LocalFile C:\\Users\\Public\\DevOps\\Downloads\\JRE\\jre-8u65-windows-x64.exe -Force \n",
									"Copy-S3Object -BucketName doerodney -Key downloads/jre/java.settings.cfg -LocalFile C:\\Users\\Public\\DevOps\\Downloads\\JRE\\java.settings.cfg \n",
									"Copy-S3Object -BucketName doerodney -Key downloads/jenkins/1.637/windows/jenkins.msi -LocalFile C:\\Users\\Public\\DevOps\\Downloads\\Jenkins\\jenkins.msi \n",									
									"C:\\Users\\Public\\DevOps\\Downloads\\JRE\\jre-8u65-windows-x64.exe INSTALLCFG=C:\\Users\\Public\\DevOps\\Downloads\\JRE\\java.settings.cfg \n",									
									"[Environment]::SetEnvironmentVariable('JENKINS_HOME', 'D:\\Jenkins', 'Machine') \n",
									"msiexec /package C:\\Users\\Public\\DevOps\\Downloads\\Jenkins\\jenkins.msi /quiet \n",									
									"Start-Service -Name jenkins \n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		}
   },

	"Outputs" : {
		"JenkinsURL": {
			"Value": {
				"Fn::Join": [
					"",
					[
						"http://",
						{
							"Fn::GetAtt": ["EC2Instance", "PublicIp" ]
						},
						":8080"
					]
				]
			},
			"Description" : "URL of the Jenkins instance"
		},
		"Region" : {
			"Value" : { "Ref" : "AWS::Region" },
			"Description" : "AWS Region used for instantiation"
		},
		"AvailabilityZone" : {
			"Value" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RegionAvailabilityZone" ] },
			"Description" : "Availability zone used with AWS region"
		},
		"Environment" : {
			"Value" : { "Ref" : "Environment" },
			"Description" : "Value of the Environment parameter"
		}
	}
}



